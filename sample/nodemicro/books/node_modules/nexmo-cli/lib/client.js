"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _nexmo = _interopRequireDefault(require("nexmo"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Client =
/*#__PURE__*/
function () {
  function Client(config, emitter) {
    _classCallCheck(this, Client);

    this.emitter = emitter;
    this.config = config;
  }

  _createClass(Client, [{
    key: "instance",
    value: function instance() {
      return initialize(this.config, this.emitter);
    }
  }, {
    key: "definition",
    value: function definition() {
      return _nexmo.default;
    }
  }, {
    key: "instanceWith",
    value: function instanceWith(key, secret) {
      return new _nexmo.default({
        apiKey: key,
        apiSecret: secret
      });
    }
  }]);

  return Client;
}();

var _default = Client; // private methods

exports.default = _default;

var initialize = function initialize(config, emitter) {
  var packageDetails = require("".concat(__dirname, "/../package.json"));

  try {
    var credentials = config.read().credentials;
    return new _nexmo.default({
      apiKey: credentials.api_key,
      apiSecret: credentials.api_secret
    }, {
      debug: emitter.debugging,
      appendToUserAgent: "nexmo-cli/".concat(packageDetails.version.replace('v', ''))
    });
  } catch (e) {
    if (e instanceof TypeError) {
      emitter.error("Could not initialize Nexmo library. Please run 'nexmo setup <api_key> <api_secret>' to setup the CLI correctly. (".concat(e.message, ")"));
    } else {
      emitter.error("Could not read credentials. Please run 'nexmo setup <api_key> <api_secret>' to setup the CLI. (".concat(e.message, ")"));
    }
  }

  return null;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jbGllbnQuanMiXSwibmFtZXMiOlsiQ2xpZW50IiwiY29uZmlnIiwiZW1pdHRlciIsImluaXRpYWxpemUiLCJOZXhtbyIsImtleSIsInNlY3JldCIsImFwaUtleSIsImFwaVNlY3JldCIsInBhY2thZ2VEZXRhaWxzIiwicmVxdWlyZSIsIl9fZGlybmFtZSIsImNyZWRlbnRpYWxzIiwicmVhZCIsImFwaV9rZXkiLCJhcGlfc2VjcmV0IiwiZGVidWciLCJkZWJ1Z2dpbmciLCJhcHBlbmRUb1VzZXJBZ2VudCIsInZlcnNpb24iLCJyZXBsYWNlIiwiZSIsIlR5cGVFcnJvciIsImVycm9yIiwibWVzc2FnZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7O0lBRU1BLE07OztBQUNKLGtCQUFZQyxNQUFaLEVBQW9CQyxPQUFwQixFQUE2QjtBQUFBOztBQUMzQixTQUFLQSxPQUFMLEdBQWVBLE9BQWY7QUFDQSxTQUFLRCxNQUFMLEdBQWNBLE1BQWQ7QUFDRDs7OzsrQkFFVTtBQUNULGFBQU9FLFVBQVUsQ0FBQyxLQUFLRixNQUFOLEVBQWMsS0FBS0MsT0FBbkIsQ0FBakI7QUFDRDs7O2lDQUVZO0FBQ1gsYUFBT0UsY0FBUDtBQUNEOzs7aUNBRVlDLEcsRUFBS0MsTSxFQUFRO0FBQ3hCLGFBQU8sSUFBSUYsY0FBSixDQUFVO0FBQUVHLFFBQUFBLE1BQU0sRUFBRUYsR0FBVjtBQUFlRyxRQUFBQSxTQUFTLEVBQUVGO0FBQTFCLE9BQVYsQ0FBUDtBQUNEOzs7Ozs7ZUFHWU4sTSxFQUVmOzs7O0FBRUEsSUFBTUcsVUFBVSxHQUFHLFNBQWJBLFVBQWEsQ0FBVUYsTUFBVixFQUFrQkMsT0FBbEIsRUFBMkI7QUFDNUMsTUFBTU8sY0FBYyxHQUFHQyxPQUFPLFdBQUlDLFNBQUosc0JBQTlCOztBQUVBLE1BQUk7QUFDRixRQUFNQyxXQUFXLEdBQUdYLE1BQU0sQ0FBQ1ksSUFBUCxHQUFjRCxXQUFsQztBQUNBLFdBQU8sSUFBSVIsY0FBSixDQUNMO0FBQ0VHLE1BQUFBLE1BQU0sRUFBRUssV0FBVyxDQUFDRSxPQUR0QjtBQUVFTixNQUFBQSxTQUFTLEVBQUVJLFdBQVcsQ0FBQ0c7QUFGekIsS0FESyxFQUtMO0FBQ0VDLE1BQUFBLEtBQUssRUFBRWQsT0FBTyxDQUFDZSxTQURqQjtBQUVFQyxNQUFBQSxpQkFBaUIsc0JBQWVULGNBQWMsQ0FBQ1UsT0FBZixDQUF1QkMsT0FBdkIsQ0FBK0IsR0FBL0IsRUFBb0MsRUFBcEMsQ0FBZjtBQUZuQixLQUxLLENBQVA7QUFVRCxHQVpELENBWUUsT0FBT0MsQ0FBUCxFQUFVO0FBQ1YsUUFBSUEsQ0FBQyxZQUFZQyxTQUFqQixFQUE0QjtBQUMxQnBCLE1BQUFBLE9BQU8sQ0FBQ3FCLEtBQVIsNEhBQWtJRixDQUFDLENBQUNHLE9BQXBJO0FBQ0QsS0FGRCxNQUVPO0FBQ0x0QixNQUFBQSxPQUFPLENBQUNxQixLQUFSLDBHQUFnSEYsQ0FBQyxDQUFDRyxPQUFsSDtBQUNEO0FBQ0Y7O0FBQ0QsU0FBTyxJQUFQO0FBQ0QsQ0F2QkQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTmV4bW8gZnJvbSAnbmV4bW8nO1xuXG5jbGFzcyBDbGllbnQge1xuICBjb25zdHJ1Y3Rvcihjb25maWcsIGVtaXR0ZXIpIHtcbiAgICB0aGlzLmVtaXR0ZXIgPSBlbWl0dGVyO1xuICAgIHRoaXMuY29uZmlnID0gY29uZmlnO1xuICB9XG5cbiAgaW5zdGFuY2UoKSB7XG4gICAgcmV0dXJuIGluaXRpYWxpemUodGhpcy5jb25maWcsIHRoaXMuZW1pdHRlcik7XG4gIH1cblxuICBkZWZpbml0aW9uKCkge1xuICAgIHJldHVybiBOZXhtbztcbiAgfVxuXG4gIGluc3RhbmNlV2l0aChrZXksIHNlY3JldCkge1xuICAgIHJldHVybiBuZXcgTmV4bW8oeyBhcGlLZXk6IGtleSwgYXBpU2VjcmV0OiBzZWNyZXQgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQ2xpZW50O1xuXG4vLyBwcml2YXRlIG1ldGhvZHNcblxuY29uc3QgaW5pdGlhbGl6ZSA9IGZ1bmN0aW9uIChjb25maWcsIGVtaXR0ZXIpIHtcbiAgY29uc3QgcGFja2FnZURldGFpbHMgPSByZXF1aXJlKGAke19fZGlybmFtZX0vLi4vcGFja2FnZS5qc29uYCk7XG5cbiAgdHJ5IHtcbiAgICBjb25zdCBjcmVkZW50aWFscyA9IGNvbmZpZy5yZWFkKCkuY3JlZGVudGlhbHM7XG4gICAgcmV0dXJuIG5ldyBOZXhtbyhcbiAgICAgIHtcbiAgICAgICAgYXBpS2V5OiBjcmVkZW50aWFscy5hcGlfa2V5LFxuICAgICAgICBhcGlTZWNyZXQ6IGNyZWRlbnRpYWxzLmFwaV9zZWNyZXRcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGRlYnVnOiBlbWl0dGVyLmRlYnVnZ2luZyxcbiAgICAgICAgYXBwZW5kVG9Vc2VyQWdlbnQ6IGBuZXhtby1jbGkvJHtwYWNrYWdlRGV0YWlscy52ZXJzaW9uLnJlcGxhY2UoJ3YnLCAnJyl9YFxuICAgICAgfVxuICAgICk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIFR5cGVFcnJvcikge1xuICAgICAgZW1pdHRlci5lcnJvcihgQ291bGQgbm90IGluaXRpYWxpemUgTmV4bW8gbGlicmFyeS4gUGxlYXNlIHJ1biAnbmV4bW8gc2V0dXAgPGFwaV9rZXk+IDxhcGlfc2VjcmV0PicgdG8gc2V0dXAgdGhlIENMSSBjb3JyZWN0bHkuICgke2UubWVzc2FnZX0pYCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGVtaXR0ZXIuZXJyb3IoYENvdWxkIG5vdCByZWFkIGNyZWRlbnRpYWxzLiBQbGVhc2UgcnVuICduZXhtbyBzZXR1cCA8YXBpX2tleT4gPGFwaV9zZWNyZXQ+JyB0byBzZXR1cCB0aGUgQ0xJLiAoJHtlLm1lc3NhZ2V9KWApO1xuICAgIH1cbiAgfVxuICByZXR1cm4gbnVsbDtcbn07XG4iXX0=